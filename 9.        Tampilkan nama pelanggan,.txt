```txt
-- 9. Tampilkan nama pelanggan, total seluruh jumlah barang yang pernah dibeli, dan rata-rata total bayar mereka.
SELECT 
    p.nama_pelanggan,
    SUM(dt.jumlah_barang) AS total_jumlah_barang,
    AVG(t.total_bayar) AS rata_rata_total_bayar
FROM 
    pelanggan p
JOIN 
    transaksi t ON p.kode_pelanggan = t.kode_pelanggan
JOIN 
    detail_transaksi dt ON t.nota = dt.nota
GROUP BY 
    p.kode_pelanggan, p.nama_pelanggan;

-- 10. Tampilkan barang dengan harga paling mahal dan paling murah.
-- Harga paling mahal
SELECT 
    nama_barang, 
    harga_satuan 
FROM 
    barang 
WHERE 
    harga_satuan = (SELECT MAX(harga_satuan) FROM barang)

UNION ALL

-- Harga paling murah
SELECT 
    nama_barang, 
    harga_satuan 
FROM 
    barang 
WHERE 
    harga_satuan = (SELECT MIN(harga_satuan) FROM barang);

-- 11. Tampilkan nama barang, harga satuan, dan berapa kali barang itu pernah dibeli oleh semua pelanggan.
SELECT 
    b.nama_barang,
    b.harga_satuan,
    COUNT(dt.kode_barang) AS jumlah_kali_dibeli
FROM 
    barang b
LEFT JOIN 
    detail_transaksi dt ON b.kode_barang = dt.kode_barang
GROUP BY 
    b.kode_barang, b.nama_barang, b.harga_satuan
ORDER BY 
    jumlah_kali_dibeli DESC;

-- 12. Tampilkan transaksi terbesar dan terkecil untuk setiap pelanggan.
SELECT 
    p.nama_pelanggan,
    MAX(t.total_bayar) AS transaksi_terbesar,
    MIN(t.total_bayar) AS transaksi_terkecil
FROM 
    pelanggan p
JOIN 
    transaksi t ON p.kode_pelanggan = t.kode_pelanggan
GROUP BY 
    p.kode_pelanggan, p.nama_pelanggan;

-- 13. Tampilkan nama pelanggan, jumlah transaksi, dan total uang yang sudah mereka keluarkan. Hanya tampilkan yang jumlah transaksinya â‰¥ 2.
SELECT 
    p.nama_pelanggan,
    COUNT(t.nota) AS jumlah_transaksi,
    SUM(t.total_bayar) AS total_pengeluaran
FROM 
    pelanggan p
JOIN 
    transaksi t ON p.kode_pelanggan = t.kode_pelanggan
GROUP BY 
    p.kode_pelanggan, p.nama_pelanggan
HAVING 
    COUNT(t.nota) >= 2;
```
